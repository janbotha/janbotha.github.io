{"version":3,"sources":["components/Carousel.js","components/Stars.js","components/Reviews.js","components/Quantity.js","components/Highlights.js","App.js","serviceWorker.js","index.js"],"names":["Carousel","props","_this","Object","classCallCheck","this","imagePrev","imageNow","imageNext","possibleConstructorReturn","getPrototypeOf","call","images","length","state","show","primary","moveImages","bind","assertThisInitialized","clickLeft","clickRight","index","prev","next","setState","console","log","react_default","a","createElement","className","src","image","data-id","key","data-testid","alt","tabIndex","onClick","clickZoom","id","ref","clickImage","Component","Stars","stars","r","option","push","g","Reviews","proReview","conReview","datePosted","dateFormat","date","d","Date","mnth","getMonth","day","getDate","slice","getFullYear","components_Stars","overallRating","title","review","screenName","Quantity","quantity","quantityChange","event","changeQuantity","target","dataset","parseInt","q","Highlights","App","isLoading","price","online","instore","json","require","myItem","CatalogEntryView","warn","Images","myImages","first","PrimaryImage","altImages","AlternateImages","i","other","priceOffers","Offers","offers","OfferPrice","formattedPriceValue","purchasingChannelCode","CustomerReview","reviews","Pro","Con","findInStore","window","innerWidth","components_Carousel","components_Quantity","disabled","clickPickUp","clickAddToCart","name","clickAddToRegistry","clickAddToList","clickShare","components_Highlights","components_Reviews","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.0caf7e44.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Carousel extends Component {\n\n  constructor(props) {\n    super(props);\n    // state\n    var imagePrev = \"\";\n    var imageNow = \"\";\n    var imageNext = \"\"\n\n    if (this.props.images != null) { // if we have more than 1 images\n      if (this.props.images.length > 1) {\n        imagePrev = this.props.images[this.props.images.length-1];\n        imageNow = this.props.images[0];\n        imageNext = this.props.images[1];\n      }\n      if (this.props.images.length > 0) { // if we only have 1 image\n        imageNow = this.props.images[0];\n      }\n    }\n\n    this.state = {\n      show: 0,\n      imagePrev: imagePrev,\n      imageNow: imageNow,\n      imageNext: imageNext,\n      primary: imageNow\n    };\n\n    this.moveImages = this.moveImages.bind(this);\n    this.clickLeft = this.clickLeft.bind(this);\n    this.clickRight = this.clickRight.bind(this);\n  };\n\n  /* clickLeft decreases the position you are in the scrolling carousel\n   *\n   */\n  clickLeft() {\n    var index = 0;\n    if (this.props.images != null && this.props.images.length > 0) {\n      index = this.props.images.length-1;\n    }\n    // show will decrease\n    if (this.state.show > 0) {\n      index = this.state.show - 1;\n    }\n    this.moveImages(index);\n  };\n\n  /* clickRight increases the position you are in the scrolling carousel.\n   *\n   */\n  clickRight() {\n    var index = 0;\n    // we have two situations, if the user has previously clicked an image or if the image is in the middle being showing\n    if (this.props.images != null && this.props.images.length > 0) {\n      if (this.state.show < this.props.images.length-1) {\n        index = this.state.show + 1;\n      }\n    }\n    this.moveImages(index);\n  };\n\n  /* moveImages will find the previous, current and next images to display on the page based\n   * on if you pressed the left or right button.\n   */\n  moveImages(index) {\n    var prev = index-1;\n      if (this.props.images != null && this.props.images.length > 0) {\n        if (prev < 0) {\n          prev = this.props.images.length-1;\n        }\n    }\n    var next = index+1;\n    if (this.props.images != null && this.props.images.length > 0) {\n      if (next > this.props.images.length-1) {\n        next = 0;\n      }\n    }\n\n    var imagePrev = this.props.images[prev];\n    var imageNow = this.props.images[index];\n    var imageNext = this.props.images[next];\n\n    this.setState({\n      show: index,\n      imagePrev: imagePrev,\n      imageNow: imageNow,\n      imageNext: imageNext,\n      primary: this.props.images[index]\n    });\n  }\n\n  clickZoom() {\n    console.log(\"clicked zoom\");\n    // TODO: enlarge the primary image\n  };\n\n  render() {\n    return (\n      <div>\n        <img className=\"primary-image\"\n          src={this.state.primary.image}\n          data-id={this.state.primary.key}\n          data-testid=\"primary\"\n          alt=\"product\" />\n        <p></p>\n        <div className=\"centered zoom\">\n          <span\n            className=\"zoom-image\"\n            tabIndex=\"0\"\n            alt=\"zoom in\"\n            data-testid=\"zoomIn\"\n            onClick={this.clickZoom}>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\n          <span className=\"medium\">View Image</span>\n        </div>\n        <div className=\"grid-carousel\">\n          <div className=\"grid-image\">\n            <div\n              className=\"carousel-back\"\n              onClick={this.clickLeft}\n              data-testid=\"clickLeft\"\n              tabIndex=\"0\" />\n          </div>\n        <div id=\"imagePrev\" className=\"grid-image\">\n          <img\n            className=\"primary-image not-selected-image\"\n            ref=\"imagePrev\"\n            data-id={this.state.imagePrev.key}\n            data-testid=\"imagePrev\"\n            onClick={this.clickImage}\n            src={this.state.imagePrev.image}\n            alt=\"previous preview\" />\n        </div>\n        <div id=\"imageNow\" className=\"grid-image\">\n          <img\n            className=\"primary-image selected-image\"\n            ref=\"imageNow\"\n            data-id={this.state.imageNow.key}\n            data-testid=\"imageNow\"\n            onClick={this.clickImage}\n            src={this.state.imageNow.image}\n            alt=\"product preview\" />\n        </div>\n        <div id=\"imageNext\" className=\"grid-image\">\n          <img\n            className=\"primary-image not-selected-image\"\n            ref=\"imageNext\"\n            data-id={this.state.imageNext.key}\n            data-testid=\"imageNext\"\n            onClick={this.clickImage}\n            src={this.state.imageNext.image}\n            alt=\"next preview\" />\n        </div>\n        <div className=\"grid-image\">\n          <div\n            className=\"carousel-foward\"\n            onClick={this.clickRight}\n            data-testid=\"clickRight\"\n            tabIndex=\"0\" />\n          </div>\n        </div>\n      </div>\n    );\n  };\n}\n\nexport default Carousel;\n","import React, { Component } from 'react';\n\nclass Stars extends Component {\n\n  render() {\n    // grab from the Reviews options how many stars out of five there are\n    // add the red/gray stars in an array\n    var stars = [];\n    for (var r = 0; r < this.props.option; r++) {\n      stars.push(\"redStar\");\n    }\n    for (var g = 0; g < 5-this.props.option; g++) {\n      stars.push(\"grayStar\");\n    }\n\n    // then print out the array out of five to the page\n    return (\n      <span\n        className=\"reviewStars\"\n        data-id={this.props.option}\n        data-testid=\"stars-numbers\">\n        <span className={stars[0]}>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\n        <span className={stars[1]}>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\n        <span className={stars[2]}>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\n        <span className={stars[3]}>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\n        <span className={stars[4]}>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\n      </span>\n    );\n  };\n}\n\nexport default Stars;\n","import React, { Component } from 'react';\nimport Stars from './Stars'\n\nclass Reviews extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      proReview: this.props.proReview,\n      conReview: this.props.conReview\n    };\n\n    this.props.proReview.datePosted = this.dateFormat(this.props.proReview.datePosted);\n    this.props.conReview.datePosted = this.dateFormat(this.props.conReview.datePosted);\n\n    this.dateFormat = this.dateFormat.bind(this);\n  }\n\n  // Because the date format isn't human readible, we'll make it formatted Month Name, Day, Year\n  dateFormat(date) {\n    var mnths = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n    var d = new Date(date),\n        mnth = (d.getMonth()+1),\n        day  = (\"0\" + d.getDate()).slice(-2);\n    return mnths[mnth-1] + \" \" + day + \", \" + d.getFullYear();\n  }\n\n  render() {\n\n    return (\n      <div>\n        <div><Stars option=\"5\"/><span className=\"medium\" data-testid=\"review-overall\">overall</span>\n        <span className=\"medium\">view all 14 reviews</span></div>\n        <p></p>\n        <div className=\"grid-reviews\">\n          <div className=\"grid-review\">\n            <h2 className=\"medium\">PRO</h2>\n            <p className=\"medium\">most helpful 4-5 star review</p>\n            <Stars option={this.props.proReview.overallRating} />\n            <h3 className=\"medium\" data-testid=\"review-protitle\">{this.props.proReview.title}</h3>\n            <p className=\"medium\" data-testid=\"review-proreview\">{this.props.proReview.review}</p>\n            <p className=\"medium\" data-testid=\"review-proname\">{this.props.proReview.screenName} {this.props.proReview.datePosted}</p>\n          </div>\n          <div className=\"grid-review\">\n            <h2 className=\"medium\">CON</h2>\n            <p className=\"medium\">most helpful 1-2 star review</p>\n            <Stars option={this.props.conReview.overallRating}/>\n            <h3 className=\"medium\" data-testid=\"review-contitle\">{this.props.conReview.title}</h3>\n            <p className=\"medium\" data-testid=\"review-conreview\">{this.props.conReview.review}</p>\n            <p className=\"medium\" data-testid=\"review-conname\">{this.props.conReview.screenName} {this.props.conReview.datePosted}</p>\n          </div>\n          </div>\n      </div>\n    );\n  };\n}\n\nexport default Reviews;\n","import React, { Component } from 'react';\n\nclass Quantity extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      quantity: this.props.quantity\n    };\n    // bind the functions as they do not do so automatically\n    this.quantityChange = this.quantityChange.bind(this);\n  }\n\n  // this function will be called when clicking the minus or plus to change the quantity\n  // and display it on the page\n  quantityChange(event) {\n    var changeQuantity = event.target.dataset.id;\n    if (changeQuantity != null) {\n      changeQuantity = parseInt(changeQuantity, 10);\n    }\n    if (this.state.quantity > 1 || changeQuantity > 0) { // we shouldn't have quantity be less than 1 to add\n      var q = this.state.quantity + changeQuantity;\n      this.setState({ quantity: q });\n    }\n  }\n\n  render() {\n    return (\n        <div className=\"boxed\">\n          <span className=\"quantity left\">quantity: </span>\n          &nbsp;\n          <span className=\"right\">\n            <span\n              data-testid=\"quantity-minus\"\n              className=\"minus\"\n              data-id=\"-1\"\n              tabIndex=\"0\"\n              onClick={this.quantityChange}>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\n            <span data-testid=\"quantity-number\">{this.state.quantity}</span>\n            <span\n              data-testid=\"quantity-plus\"\n              className=\"plus\"\n              data-id=\"1\"\n              tabIndex=\"0\"\n              onClick={this.quantityChange}>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\n          </span>\n        </div>\n      );\n  };\n}\n\nexport default Quantity;\n","import React, { Component } from 'react';\n\nclass Highlights extends Component {\n\n\n\n  render() {\n    return (\n      <div>\n        <div className=\"large\">product highlights</div>\n        <ul>\n          <li className=\"small\" data-testid=\"highlights1\"><strong>Wattage Output:</strong> 1100 Watts</li>\n          <li className=\"small\" data-testid=\"highlights2\"><strong>Number of Speeds:</strong> 3 </li>\n          <li className=\"small\" data-testid=\"highlights3\"><strong>Capacity (volume):</strong> 72.0 Oz.</li>\n          <li className=\"small\" data-testid=\"highlights4\"><strong>Appliance Capabilities:</strong> Blends</li>\n          <li className=\"small\" data-testid=\"highlights5\"><strong>Includes:</strong> Travel Lid</li>\n          <li className=\"small\" data-testid=\"highlights6\"><strong>Material:</strong> Plastic</li>\n          <li className=\"small\" data-testid=\"highlights7\"><strong>Finish:</strong> Painted</li>\n          <li className=\"small\" data-testid=\"highlights8\"><strong>Metal Finish:</strong> Chrome</li>\n          <li className=\"small\" data-testid=\"highlights9\"><strong>Safety and Security Features:</strong> Non-Slip Base</li>\n          <li className=\"small\" data-testid=\"highlights10\"><strong>Care and Cleaning:</strong> Easy-To-Clean, Dishwasher Safe Parts</li>\n        </ul>\n      </div>\n    );\n  };\n}\n\nexport default Highlights;\n","import React, { Component } from 'react';\nimport Carousel from './components/Carousel'\nimport Reviews from './components/Reviews'\nimport Quantity from './components/Quantity'\nimport Highlights from './components/Highlights'\nimport './css/App.css';\n\nclass App extends Component {\n\n constructor(props) {\n   super(props);\n   // state\n   this.state = {\n     isLoading: true,\n     title: '',\n     images: null,\n     price: '',\n     online: false,\n     instore: false,\n     quantity: 1\n   }\n }\n\n/*\n * Below are onClick actions for each button or interactable object on the page.\n */\n clickPickUp() {\n   // TODO: Implement clicking the pick up button\n   console.log(\"TODO: clicked pick up\");\n };\n\n clickAddToCart() {\n   // TODO: Implement clicking the add to cart button\n   console.log(\"TODO: clicked add to cart\");\n };\n\n clickAddToRegistry() {\n   // TODO: Implement clicking add to registry button\n   console.log(\"TODO: clicked add to registry\");\n };\n\n clickAddToList() {\n   // TODO: Implement clicking add to list button\n   console.log(\"TODO: clicked add to list\");\n };\n\n clickShare() {\n   // TODO: Implement clicking the share button\n   console.log(\"TODO: clicked share\");\n };\n\n clickZoomIn() {\n   // TODO: Implement clicking the zoom in button\n   console.log(\"TODO: clicked zoom in\");\n };\n\n /* componentDidMount\n  * Called after this entire component is mounted and load & parse json data at that point.\n  */\n componentDidMount() {\n   // load json from file\n   this.setState({ isLoading: true });\n\n   var title = \"\";\n   var images = [];\n   var price = \"\";\n   var proReview = {};\n   var conReview = {};\n\n   const json = require('./item-data.json');\n    if (json != null) {\n      var myItem = json.CatalogEntryView;\n\n      // check to see if the item exists\n      if (myItem.length > 0) {\n        // set object into state\n        //this.state.itemDetails = myItem[0];\n\n        // parse through title information\n        if (myItem[0].title != null) {\n          title = myItem[0].title;\n        }\n        else {\n          console.warn(\"There was no title for this product\");\n        }\n\n        // parse through image information\n        if (myItem[0].Images.length > 0) {\n          var myImages = myItem[0].Images;\n          if (myImages.length > 0) {\n            //var imageCount = myImages[0].imageCount; // don't need\n            var primary = myImages[0].PrimaryImage[0].image;\n            var first = {\n              key: 0,\n              image: primary\n            };\n            images.push(first);\n\n            var altImages = myImages[0].AlternateImages;\n            for (var i = 0; i < altImages.length; i++) {\n              // this is the assumption we have at least 2 pictures or more.\n              // If you only had one, what is the point of a carousel?\n              var other = {\n                key: i+1,\n                image: altImages[i].image\n              };\n              images.push(other);\n            }\n          }\n          else {\n            console.warn(\"there are no images for this product\");\n          }\n        }\n        else {\n          console.warn(\"there are no images for this product\");\n        }\n\n        // parse through price information\n        var priceOffers = myItem[0].Offers;\n        if (priceOffers.length > 0) {\n          var offers = priceOffers[0];\n          if (offers.OfferPrice.length > 0) {\n              var dollarPrice = offers.OfferPrice[0];\n              price = dollarPrice.formattedPriceValue;\n          }\n          else {\n            console.warn(\"There was no price for this product\");\n          }\n        }\n        else {\n          console.warn(\"There was no price for this product\");\n        }\n\n        // these are hilarious because I'm assuming that\n        // 0 = available both online and instore,\n        // 1 = online,\n        // 2 = instore\n        // enums will never die.\n\n        // parse through available online\n        var online = (myItem[0].purchasingChannelCode === 0 || 1) ? true : false;\n        // parse through available instore\n        var instore = (myItem[0].purchasingChannelCode === 0 || 2) ? true : false;\n\n        if (myItem[0].CustomerReview.length > 0) {\n          var reviews = myItem[0].CustomerReview[0];\n          if (reviews.Pro.length > 0) {\n            proReview = reviews.Pro[0];\n          }\n          if (reviews.Con.length > 0) {\n            conReview = reviews.Con[0];\n          }\n        }\n        else {\n          console.log(\"There was no reviews for this product\");\n        }\n\n\n        // You could add the rest of the information from the json here to be parsed,\n        // such as the reviews, product highlights, promotions, etc\n\n        // When we're done with the parsing, we know we'll loaded up the information\n        // we need to display on the product page.\n        this.setState({\n          isLoading: false,\n          title: title,\n          images: images,\n          price: price,\n          online: online,\n          instore: instore,\n          proReview: proReview,\n          conReview: conReview\n        });\n      }\n      else {\n        console.warn(\"There is no item in the json to look up or the json formatting has changed.\");\n      }\n    }\n  };\n\n  render() {\n    // render may be called before json is done loading, if that is the case,\n    // wait until the isLoading is true, isLoading will be set to true when done.\n    if (this.state.isLoading) {\n      return <p>Loading ...</p>;\n    }\n\n    // small little find in store didn't appear on mobile, just desktop\n    var findInStore = \"find in a store\";\n    const isMobile = window.innerWidth <= 768;\n    if (isMobile) findInStore = \"\";\n\n    return (\n      <div className=\"content\">\n        <div className=\"grid-container\">\n          <div className=\"grid-item\">\n            <div className=\"text-item-name centered\" data-testid=\"item-title\">{this.state.title}</div>\n            <Carousel images={this.state.images}/>\n            </div>\n            <div className=\"grid-item\">\n            <div><span className=\"text-item-price\" data-testid=\"item-price\">{this.state.price}</span> <span className=\"small\">online price</span></div>\n            <hr />\n            <div className=\"announce-image\"><span className=\"small announce\" data-testid=\"item-ship\">spend $50, ship FREE</span></div>\n            <div className=\"announce-image\"><span className=\"small announce\" data-testid=\"item-gift\">$25 gift card with purchase of a select Ninja Blender</span></div>\n            <hr />\n            <Quantity quantity={this.state.quantity} />\n            <div className=\"grid-buttons\">\n              <div className=\"grid-button\">\n                <button data-testid=\"item-instore\" disabled={!this.state.instore} onClick={this.clickPickUp} className=\"targetLargeButton pickUpButton\">Pick Up In Store</button>\n                <div className=\"small centered findInStore\">{findInStore}</div>\n                </div>\n                <div className=\"grid-button\">\n                <button data-testid=\"item-online\" disabled={!this.state.online} onClick={this.clickAddToCart} className=\"targetLargeButton addToCartButton\">Add to Cart</button>\n                </div>\n            </div>\n            <div className=\"grid-returns\">\n              <div className=\"grid-return\">\n                <div className=\"large\">returns</div>\n              </div>\n              <div className=\"grid-return\">\n                <div className=\"small hr-vert return-desc\" data-testid=\"item-return\">The item must be returned within 30 days of the ship date. See return policy for details. Price, promotions, styles and availiblity may vary by store and online.</div>\n              </div>\n            </div>\n            <div className=\"grid-3buttons\">\n              <div className=\"grid-3button\">\n                <button name=\"addToRegistryButton\" onClick={this.clickAddToRegistry} className=\"targetSmallButton addToRegistryButton\">Add To Registry</button>\n              </div>\n              <div className=\"grid-3button\">\n                <button name=\"addToListButton\" onClick={this.clickAddToList} className=\"targetSmallButton addToListButton\">Add To List</button>\n              </div>\n              <div className=\"grid-3button\">\n                <button name=\"shareButton\" onClick={this.clickShare} className=\"targetSmallButton shareButton\">Share</button>\n              </div>\n            </div>\n            <Highlights />\n          </div>\n          <div className=\"grid-item\">\n            <Reviews proReview={this.state.proReview} conReview={this.state.conReview} />\n          </div>\n          <div className=\"grid-item\">\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}